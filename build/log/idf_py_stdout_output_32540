[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mpu6050.c.obj
[2/10] Linking C static library esp-idf\main\libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\rasua\Desktop\ESP_coba_coba\mpu6050\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/rasua/Desktop/ESP_coba_coba/mpu6050/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable mpu6050.elf
[6/8] Generating binary image from built executable
esptool.py v4.5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/rasua/Desktop/ESP_coba_coba/mpu6050/build/mpu6050.bin
[7/8] cmd.exe /C "cd /D C:\Users\rasua\Desktop\ESP_coba_coba\mpu6050\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/rasua/Desktop/ESP_coba_coba/mpu6050/build/partition_table/partition-table.bin C:/Users/rasua/Desktop/ESP_coba_coba/mpu6050/build/mpu6050.bin"
mpu6050.bin binary size 0x349b0 bytes. Smallest app partition is 0x100000 bytes. 0xcb650 bytes (79%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/rasua/Desktop/ESP_coba_coba/mpu6050/build -P C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p com4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 mpu6050.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5
Serial port com4
Connecting...
Failed to get PID of a device on com4, using standard reset sequence.
..
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:a1:13:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00044fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16452...
Writing at 0x00001000... (50 %)
Writing at 0x000076ad... (100 %)
Wrote 26384 bytes (16452 compressed) at 0x00001000 in 0.7 seconds (effective 308.9 kbit/s)...
Hash of data verified.
Compressed 215472 bytes to 115168...
Writing at 0x00010000... (12 %)
Writing at 0x0001cde8... (25 %)
Writing at 0x00022592... (37 %)
Writing at 0x000283f4... (50 %)
Writing at 0x0002dbef... (62 %)
Writing at 0x000379aa... (75 %)
Writing at 0x0003e77e... (87 %)
Writing at 0x000446d6... (100 %)
Wrote 215472 bytes (115168 compressed) at 0x00010000 in 2.8 seconds (effective 607.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 472.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
